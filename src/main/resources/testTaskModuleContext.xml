<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>

    <!-- Datasource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/testTask"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean>

    <!--SesseionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>ru.kolvah.entity.Indicator</value>
                <value>ru.kolvah.entity.Measurement</value>
                <value>ru.kolvah.entity.Equipment</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL94Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.max_fetch_depth">2</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
        <property name="packagesToScan" value="ru.kolvah.entity"/>
    </bean>

    <bean name="equipmentDao" class="ru.kolvah.dao.daoimpl.EquipmentDaoImpl"/>
    <bean name="indicatorDao" class="ru.kolvah.dao.daoimpl.IndicatorDaoImpl"/>
    <bean name="measurementDao" class="ru.kolvah.dao.daoimpl.MeasurementDaoImpl"/>
    <bean name="equipmentService" class="ru.kolvah.service.serviceImpl.EquipmentServiceImpl"/>
    <bean name="indicatorService" class="ru.kolvah.service.serviceImpl.IndicatorServiceImpl"/>
    <bean name="measurementService" class="ru.kolvah.service.serviceImpl.MeasurementServiceImpl"/>


     <!--Transaction Manager-->
    <!--<bean id="txManager"-->
          <!--class="org.springframework.orm.hibernate5.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactory" />-->
    <!--</bean>-->
    <!--<tx:annotation-driven transaction-manager="txManager" />-->
<!---->
    <!--<bean id="openSessionInterceptor" class="org.springframework.orm.hibernate5.support.OpenSessionInterceptor">-->
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    <!--</bean>-->
</beans>